{
  "name": "inergize",
  "version": "1.0.0",
  "description": "LinkedIn Profile Optimization SaaS Platform",
  "main": "index.js",
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run dev:services\" \"npm run dev:web\"",
    "dev:services": "docker-compose up -d postgres timescale redis elasticsearch && concurrently \"npm run dev:auth\" \"npm run dev:user\"",
    "dev:web": "cd web && npm run dev",
    "dev:auth": "cd services/auth-service && npm run dev",
    "dev:user": "cd services/user-service && npm run dev",
    "build": "npm run build:services && npm run build:web",
    "build:services": "concurrently \"npm run build:auth\" \"npm run build:user\"",
    "build:web": "cd web && npm run build",
    "build:auth": "cd services/auth-service && npm run build",
    "build:user": "cd services/user-service && npm run build",
    "test": "npm run test:unit && npm run test:integration",
    "test:unit": "jest --config=jest.config.js --testPathPattern=unit",
    "test:integration": "jest --config=jest.config.js --testPathPattern=integration",
    "test:e2e": "cd tests/e2e && npm run test",
    "test:coverage": "jest --config=jest.config.js --coverage",
    "lint": "concurrently \"npm run lint:services\" \"npm run lint:web\"",
    "lint:services": "concurrently \"npm run lint:auth\" \"npm run lint:user\"",
    "lint:web": "cd web && npm run lint",
    "lint:auth": "cd services/auth-service && npm run lint",
    "lint:user": "cd services/user-service && npm run lint",
    "type-check": "concurrently \"npm run type-check:auth\" \"npm run type-check:user\" \"npm run type-check:web\"",
    "type-check:auth": "cd services/auth-service && npm run type-check",
    "type-check:user": "cd services/user-service && npm run type-check",
    "type-check:web": "cd web && npm run type-check",
    "db:migrate": "npm run db:migrate:main && npm run db:migrate:analytics",
    "db:migrate:main": "cd database && npx prisma migrate dev",
    "db:migrate:analytics": "docker-compose exec timescale psql -U inergize_user -d inergize_analytics -f /docker-entrypoint-initdb.d/02-timescale-init.sql",
    "db:seed": "cd database && npx prisma db seed",
    "db:studio": "cd database && npx prisma studio",
    "db:reset": "npm run db:reset:main && npm run db:reset:analytics",
    "db:reset:main": "cd database && npx prisma migrate reset --force",
    "db:reset:analytics": "docker-compose exec timescale psql -U inergize_user -d inergize_analytics -c 'DROP SCHEMA IF EXISTS analytics CASCADE;' && npm run db:migrate:analytics",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --remove-orphans && docker system prune -f",
    "setup": "npm run setup:root && npm run setup:services && npm run setup:web && npm run setup:db",
    "setup:root": "npm install",
    "setup:services": "concurrently \"npm run setup:auth\" \"npm run setup:user\"",
    "setup:web": "cd web && npm install",
    "setup:auth": "cd services/auth-service && npm install",
    "setup:user": "cd services/user-service && npm install",
    "setup:db": "npm run docker:up && sleep 10 && npm run db:migrate && npm run db:seed",
    "clean": "npm run clean:services && npm run clean:web && npm run clean:root",
    "clean:root": "rm -rf node_modules package-lock.json",
    "clean:services": "concurrently \"npm run clean:auth\" \"npm run clean:user\"",
    "clean:web": "cd web && rm -rf node_modules .next package-lock.json",
    "clean:auth": "cd services/auth-service && rm -rf node_modules dist package-lock.json",
    "clean:user": "cd services/user-service && rm -rf node_modules dist package-lock.json",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "performance:test": "k6 run tests/performance/load-test.js",
    "docs:generate": "typedoc --options typedoc.json",
    "format": "prettier --write \"**/*.{js,ts,tsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,ts,tsx,json,md}\"",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "postinstall": "npm run setup:services && npm run setup:web"
  },
  "keywords": [
    "linkedin",
    "automation",
    "saas",
    "social-media",
    "content-management",
    "ai",
    "microservices"
  ],
  "author": "InErgize Team",
  "license": "UNLICENSED",
  "private": true,
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "devDependencies": {
    "@types/jest": "^29.5.8",
    "@types/node": "^20.10.0",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "concurrently": "^8.2.2",
    "eslint": "^8.54.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.0.1",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "lint-staged": "^15.1.0",
    "prettier": "^3.1.0",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.1",
    "typedoc": "^0.25.4",
    "typescript": "^5.3.2"
  },
  "dependencies": {
    "@prisma/client": "^5.7.0",
    "prisma": "^5.7.0"
  },
  "prisma": {
    "schema": "database/schema.prisma",
    "seed": "ts-node --esm database/seeds/seed.ts"
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/your-org/inergize.git"
  },
  "bugs": {
    "url": "https://github.com/your-org/inergize/issues"
  },
  "homepage": "https://github.com/your-org/inergize#readme"
}