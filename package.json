{
  "name": "inergize",
  "version": "1.0.0",
  "description": "LinkedIn Profile Optimization SaaS Platform",
  "main": "index.js",
  "type": "module",
  "authors": [
    "Piyush Mehta"
  ],
  "scripts": {
    "dev": "concurrently \"bun run dev:services\" \"bun run dev:web\"",
    "dev:services": "docker-compose up -d postgres timescale redis elasticsearch && concurrently \"bun run dev:auth\" \"bun run dev:user\" \"bun run dev:linkedin\" \"bun run dev:analytics\" \"bun run dev:ai\"",
    "dev:web": "cd web && bun run dev",
    "dev:auth": "cd services/auth-service && bun run dev",
    "dev:user": "cd services/user-service && bun run dev",
    "dev:linkedin": "cd services/linkedin-service && bun run dev",
    "dev:analytics": "cd services/analytics-service && bun run dev",
    "dev:ai": "cd services/ai-service && bun run dev",
    "dev:health-check": "node scripts/health-check.js",
    "build": "bun run build:services && bun run build:web",
    "build:services": "concurrently \"bun run build:auth\" \"bun run build:user\" \"bun run build:linkedin\" \"bun run build:analytics\"",
    "build:web": "cd web && bun run build",
    "build:auth": "cd services/auth-service && bun run build",
    "build:user": "cd services/user-service && bun run build",
    "build:linkedin": "cd services/linkedin-service && bun run build",
    "build:analytics": "cd services/analytics-service && bun run build",
    "test": "bun run test:unit && bun run test:integration",
    "test:unit": "jest --config=jest.config.js --testPathPatterns=\"\\.test\\.(ts|tsx)$\" --testPathIgnorePatterns=\"integration|e2e|performance|load\"",
    "test:integration": "jest --config=jest.config.js --testPathPatterns=\"integration.*\\.test\\.(ts|tsx)$\"",
    "test:ai": "jest --config=jest.config.js --testPathPatterns=\"ai-models.*\\.test\\.(ts|tsx)$\"",
    "test:compliance": "jest --config=jest.config.js --testPathPatterns=\"compliance.*\\.test\\.(ts|tsx)$\"",
    "test:performance": "jest --config=jest.config.js --testPathPatterns=\"performance.*\\.test\\.(ts|tsx)$\" --testTimeout=120000 --maxWorkers=2",
    "test:security": "jest --config=jest.config.js --testNamePattern=\"security|auth|permission\"",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:coverage": "jest --config=jest.config.js --coverage",
    "test:watch": "jest --config=jest.config.js --watch",
    "test:security:integration": "jest --config=jest.config.js --testPathPatterns=tests/automation/integration",
    "test:team-features": "jest --config=jest.config.js --testPathPatterns=\"team-features.*\\.test\\.(ts|tsx)$\"",
    "test:load": "jest --config=jest.config.js --testPathPatterns=\"load.*\\.test\\.(ts|tsx)$\" --testTimeout=300000 --maxWorkers=1",
    "test:bias-detection": "jest --config=jest.config.js --testPathPatterns=\"bias-detection.*\\.test\\.(ts|tsx)$\" --testTimeout=60000",
    "test:quality-gates": "node tests/quality-gates/automated-quality-pipeline.js",
    "install:all": "./scripts/ci-install.sh",
    "lint": "concurrently \"bun run lint:services\" \"bun run lint:web\"",
    "lint:services": "concurrently \"bun run lint:auth\" \"bun run lint:user\" \"bun run lint:linkedin\" \"bun run lint:analytics\"",
    "lint:web": "cd web && bun run lint",
    "lint:auth": "cd services/auth-service && bun run lint",
    "lint:user": "cd services/user-service && bun run lint",
    "lint:linkedin": "cd services/linkedin-service && bun run lint",
    "lint:analytics": "cd services/analytics-service && bun run lint",
    "type-check": "concurrently \"bun run type-check:auth\" \"bun run type-check:user\" \"bun run type-check:linkedin\" \"bun run type-check:analytics\" \"bun run type-check:web\"",
    "type-check:auth": "cd services/auth-service && bun run type-check",
    "type-check:user": "cd services/user-service && bun run type-check",
    "type-check:linkedin": "cd services/linkedin-service && bun run type-check",
    "type-check:analytics": "cd services/analytics-service && bun run type-check",
    "type-check:web": "cd web && bun run type-check",
    "db:migrate": "bun run db:migrate:main && bun run db:migrate:analytics",
    "db:migrate:main": "cd database && bunx prisma migrate dev",
    "db:migrate:analytics": "docker-compose exec timescale psql -U inergize_user -d inergize_analytics -f /docker-entrypoint-initdb.d/02-timescale-init.sql",
    "db:seed": "cd database && bunx prisma db seed",
    "db:studio": "cd database && bunx prisma studio",
    "db:reset": "bun run db:reset:main && bun run db:reset:analytics",
    "db:reset:main": "cd database && bunx prisma migrate reset --force",
    "db:reset:analytics": "docker-compose exec timescale psql -U inergize_user -d inergize_analytics -c 'DROP SCHEMA IF EXISTS analytics CASCADE;' && bun run db:migrate:analytics",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f",
    "docker:clean": "docker-compose down -v --remove-orphans && docker system prune -f",
    "setup": "bun run setup:root && bun run setup:services && bun run setup:web && bun run setup:db",
    "setup:root": "bun install",
    "setup:services": "concurrently \"bun run setup:auth\" \"bun run setup:user\" \"bun run setup:linkedin\" \"bun run setup:analytics\"",
    "setup:web": "cd web && bun install",
    "setup:auth": "cd services/auth-service && bun install",
    "setup:user": "cd services/user-service && bun install",
    "setup:linkedin": "cd services/linkedin-service && bun install",
    "setup:analytics": "cd services/analytics-service && bun install",
    "setup:db": "bun run docker:up && sleep 10 && bun run db:migrate && bun run db:seed",
    "clean": "bun run clean:services && bun run clean:web && bun run clean:root",
    "clean:root": "rm -rf node_modules package-lock.json",
    "clean:services": "concurrently \"bun run clean:auth\" \"bun run clean:user\" \"bun run clean:linkedin\" \"bun run clean:analytics\"",
    "clean:web": "cd web && rm -rf node_modules .next package-lock.json",
    "clean:auth": "cd services/auth-service && rm -rf node_modules dist package-lock.json",
    "clean:user": "cd services/user-service && rm -rf node_modules dist package-lock.json",
    "clean:linkedin": "cd services/linkedin-service && rm -rf node_modules dist package-lock.json",
    "clean:analytics": "cd services/analytics-service && rm -rf node_modules dist package-lock.json",
    "security:audit": "bun audit --audit-level=moderate",
    "security:fix": "bun audit fix",
    "performance:test": "k6 run tests/performance/load-test.js",
    "quality:pipeline": "node tests/quality-gates/run-quality-pipeline.js",
    "quality:report": "node tests/quality-gates/generate-quality-report.js",
    "docs:generate": "typedoc --options typedoc.json",
    "format": "prettier --write \"**/*.{js,ts,tsx,json,md}\"",
    "format:check": "prettier --check \"**/*.{js,ts,tsx,json,md}\"",
    "prepare": "husky install",
    "pre-commit": "lint-staged",
    "postinstall": "if [ \"$CI\" != \"true\" ] && command -v bun >/dev/null 2>&1; then bun run setup:services && bun run setup:web; fi"
  },
  "keywords": [
    "linkedin",
    "automation",
    "saas",
    "social-media",
    "content-management",
    "ai",
    "microservices"
  ],
  "author": "InErgize Team",
  "license": "UNLICENSED",
  "private": true,
  "engines": {
    "node": ">=22.0.0",
    "npm": ">=10.0.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.44.0",
    "@testing-library/jest-dom": "^6.4.0",
    "@testing-library/react": "^16.0.0",
    "@testing-library/user-event": "^14.5.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.0.0",
    "@typescript-eslint/eslint-plugin": "^8.0.0",
    "@typescript-eslint/parser": "^8.0.0",
    "concurrently": "^9.0.0",
    "eslint": "^9.31.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^5.2.0",
    "husky": "^9.0.0",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.0",
    "jest-junit": "^16.0.0",
    "jest-sonar-reporter": "^2.0.0",
    "lint-staged": "^15.2.0",
    "prettier": "^3.6.2",
    "ts-jest": "^29.4.0",
    "ts-node": "^10.9.0",
    "typedoc": "^0.26.0",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "@prisma/client": "^6.0.0",
    "axios": "^1.11.0",
    "playwright": "^1.54.2",
    "prisma": "^6.0.0"
  },
  "prisma": {
    "schema": "database/schema.prisma",
    "seed": "ts-node --esm database/seeds/seed.ts"
  },
  "lint-staged": {
    "*.{js,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md}": [
      "prettier --write"
    ]
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/piyush97/inergize.git"
  },
  "bugs": {
    "url": "https://github.com/piyush97/inergize/issues"
  },
  "homepage": "https://github.com/piyush97/inergize#readme"
}
