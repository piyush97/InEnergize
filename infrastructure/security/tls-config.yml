# TLS Configuration for InErgize Infrastructure
# Implements TLS 1.3 with enterprise-grade cipher suites

# SSL/TLS Certificate Configuration
certificates:
  production:
    type: "letsencrypt"
    domains:
      - "inergize.com"
      - "api.inergize.com"
      - "app.inergize.com"
      - "admin.inergize.com"
    email: "security@inergize.com"
    key_type: "rsa4096"
    renewal_days: 30

  staging:
    type: "self-signed"
    domains:
      - "staging.inergize.com"
      - "api-staging.inergize.com"
    key_type: "rsa2048"
    validity_days: 90

  development:
    type: "self-signed"
    domains:
      - "localhost"
      - "dev.inergize.local"
    key_type: "rsa2048"
    validity_days: 365

# TLS Protocol Configuration
tls:
  # Minimum TLS version
  min_version: "1.2"
  # Preferred TLS version
  preferred_version: "1.3"
  
  # Cipher suites (ordered by preference)
  cipher_suites:
    tls13:
      - "TLS_AES_256_GCM_SHA384"
      - "TLS_CHACHA20_POLY1305_SHA256"
      - "TLS_AES_128_GCM_SHA256"
    
    tls12:
      - "ECDHE-RSA-AES256-GCM-SHA384"
      - "ECDHE-RSA-CHACHA20-POLY1305"
      - "ECDHE-RSA-AES128-GCM-SHA256"
      - "ECDHE-RSA-AES256-SHA384"
      - "ECDHE-RSA-AES128-SHA256"
  
  # Elliptic curves (ordered by preference)
  curves:
    - "X25519"
    - "secp384r1"
    - "secp256r1"
  
  # Disable weak protocols and ciphers
  disabled:
    protocols:
      - "SSLv2"
      - "SSLv3"
      - "TLSv1"
      - "TLSv1.1"
    
    ciphers:
      - "DES"
      - "3DES"
      - "RC4"
      - "MD5"
      - "NULL"
      - "EXPORT"
      - "LOW"
      - "aNULL"
      - "eNULL"

# HSTS Configuration
hsts:
  enabled: true
  max_age: 31536000  # 1 year
  include_subdomains: true
  preload: true

# Certificate Transparency
certificate_transparency:
  enabled: true
  sct_required: true
  expect_ct_header: true
  expect_ct_max_age: 86400

# OCSP Configuration
ocsp:
  enabled: true
  stapling: true
  stapling_verify: true
  responder_timeout: 5s

# TLS Session Configuration
session:
  # Session resumption
  resumption: true
  # Session ticket lifetime
  ticket_lifetime: 300  # 5 minutes
  # Session cache size
  cache_size: "10m"
  # Session timeout
  timeout: 300

# Perfect Forward Secrecy
pfs:
  enabled: true
  dhparam_size: 4096
  ecdh_curve: "secp384r1"

# Client Certificate Authentication
client_certs:
  # Admin access requires client certificates
  admin:
    required: true
    ca_file: "/etc/ssl/ca/inergize-admin-ca.crt"
    verify_depth: 2
    
  # API access (optional client certs for enterprise)
  api:
    required: false
    ca_file: "/etc/ssl/ca/inergize-api-ca.crt"
    verify_depth: 1

# Certificate pinning for mobile apps
cert_pinning:
  enabled: true
  backup_pins: 2
  pin_sha256:
    primary: "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="  # Replace with actual pin
    backup1: "BBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBB="  # Replace with actual pin
    backup2: "CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC="  # Replace with actual pin

# SNI (Server Name Indication) Configuration
sni:
  enabled: true
  strict: true
  default_server: "inergize.com"

# Security headers related to TLS
security_headers:
  strict_transport_security:
    enabled: true
    max_age: 31536000
    include_subdomains: true
    preload: true
  
  content_security_policy:
    enabled: true
    policy: "default-src 'self'; upgrade-insecure-requests;"
  
  expect_ct:
    enabled: true
    max_age: 86400
    enforce: true
    report_uri: "https://api.inergize.com/security/ct-report"

# Certificate monitoring and alerting
monitoring:
  certificate_expiry:
    warning_days: 30
    critical_days: 7
    alert_channels:
      - "email:security@inergize.com"
      - "slack:#security-alerts"
  
  tls_health_check:
    enabled: true
    interval: "5m"
    timeout: "10s"
    endpoints:
      - "https://inergize.com"
      - "https://api.inergize.com"
      - "https://app.inergize.com"
  
  cipher_suite_monitoring:
    enabled: true
    report_weak_ciphers: true
    report_deprecated_protocols: true

# Nginx TLS configuration template
nginx_config: |
  # TLS Configuration
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256';
  ssl_prefer_server_ciphers on;
  ssl_ecdh_curve secp384r1;
  
  # Session configuration
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 5m;
  ssl_session_tickets on;
  
  # OCSP stapling
  ssl_stapling on;
  ssl_stapling_verify on;
  ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
  resolver 8.8.8.8 8.8.4.4 valid=300s;
  resolver_timeout 5s;
  
  # Security headers
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header X-Frame-Options "DENY" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Expect-CT "max-age=86400, enforce, report-uri=https://api.inergize.com/security/ct-report" always;
  
  # Content Security Policy
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' wss: https:; frame-src 'none'; object-src 'none'; upgrade-insecure-requests;" always;

# Kong TLS configuration
kong_config: |
  # SSL configuration
  ssl = on
  ssl_cert = /etc/ssl/certs/inergize.crt
  ssl_cert_key = /etc/ssl/private/inergize.key
  ssl_protocols = TLSv1.2 TLSv1.3
  ssl_ciphers = TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_GCM_SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256
  ssl_prefer_server_ciphers = on
  ssl_dhparam = /etc/ssl/dhparam.pem
  ssl_session_cache = shared:SSL:10m
  ssl_session_timeout = 10m

# Docker Compose TLS service configuration
docker_tls_service: |
  tls-terminator:
    image: nginx:alpine
    container_name: inergize-tls-terminator
    restart: unless-stopped
    ports:
      - "443:443"
      - "80:80"  # Redirect to HTTPS
    volumes:
      - ./infrastructure/security/nginx-tls.conf:/etc/nginx/nginx.conf:ro
      - ./infrastructure/security/ssl/certs:/etc/ssl/certs:ro
      - ./infrastructure/security/ssl/private:/etc/ssl/private:ro
      - ./infrastructure/security/ssl/dhparam.pem:/etc/ssl/dhparam.pem:ro
    environment:
      - TLS_MIN_VERSION=1.2
      - TLS_PREFERRED_VERSION=1.3
      - HSTS_MAX_AGE=31536000
    networks:
      - inergize-dmz
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx:noexec,nosuid,size=50m
      - /var/run:noexec,nosuid,size=10m
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

# Certificate generation scripts
cert_generation:
  # Self-signed certificate script
  self_signed_script: |
    #!/bin/bash
    # Generate self-signed certificate for development/staging
    
    DOMAIN="$1"
    CERT_DIR="/etc/ssl/certs"
    KEY_DIR="/etc/ssl/private"
    
    # Generate private key
    openssl genrsa -out "$KEY_DIR/$DOMAIN.key" 4096
    
    # Generate certificate
    openssl req -new -x509 -key "$KEY_DIR/$DOMAIN.key" \
      -out "$CERT_DIR/$DOMAIN.crt" \
      -days 365 \
      -subj "/C=US/ST=CA/L=San Francisco/O=InErgize/CN=$DOMAIN" \
      -addext "subjectAltName=DNS:$DOMAIN,DNS:*.$DOMAIN"
    
    # Set permissions
    chmod 600 "$KEY_DIR/$DOMAIN.key"
    chmod 644 "$CERT_DIR/$DOMAIN.crt"
  
  # Let's Encrypt certificate script
  letsencrypt_script: |
    #!/bin/bash
    # Generate Let's Encrypt certificate for production
    
    DOMAINS="$1"
    EMAIL="$2"
    
    certbot certonly \
      --nginx \
      --email "$EMAIL" \
      --agree-tos \
      --no-eff-email \
      --domains "$DOMAINS" \
      --rsa-key-size 4096 \
      --must-staple

# Compliance settings
compliance:
  # PCI DSS requirements
  pci_dss:
    strong_cryptography: true
    key_management: "hsm"  # Hardware Security Module
    certificate_validation: true
    secure_transmission: true
  
  # SOC 2 requirements
  soc2:
    encryption_in_transit: true
    key_rotation: true
    access_logging: true
    vulnerability_management: true
  
  # GDPR requirements
  gdpr:
    data_protection_in_transit: true
    privacy_by_design: true
    encryption_standards: "strong"