# Filebeat configuration for InErgize Platform
# Collects logs from all services and ships them to Elasticsearch

#==================== Filebeat inputs =============================
filebeat.inputs:

# Application logs
- type: log
  enabled: true
  paths:
    - /var/log/inergize/*.log
    - /app/logs/*.log
  fields:
    log_type: application
    environment: "${ENVIRONMENT:dev}"
    service: "${SERVICE_NAME:unknown}"
  fields_under_root: true
  multiline.pattern: '^\d{4}-\d{2}-\d{2}'
  multiline.negate: true
  multiline.match: after
  json.keys_under_root: true
  json.add_error_key: true

# Docker container logs
- type: container
  enabled: true
  paths:
    - '/var/lib/docker/containers/*/*.log'
  processors:
    - add_docker_metadata:
        host: "unix:///var/run/docker.sock"
    - decode_json_fields:
        fields: ["message"]
        target: ""
        overwrite_keys: true

# Kong access logs
- type: log
  enabled: true
  paths:
    - /tmp/access.log
  fields:
    log_type: access
    service: kong-gateway
  fields_under_root: true

# System logs
- type: log
  enabled: true
  paths:
    - /var/log/auth.log
    - /var/log/syslog
  fields:
    log_type: system
  fields_under_root: true

#==================== Global processors ===========================
processors:
  # Add hostname
  - add_host_metadata:
      when.not.contains.tags: forwarded

  # Add Docker metadata
  - add_docker_metadata: ~

  # Add Kubernetes metadata (if running in K8s)
  - add_kubernetes_metadata:
      host: ${NODE_NAME}
      matchers:
      - logs_path:
          logs_path: "/var/log/containers/"

  # Parse timestamp
  - timestamp:
      field: timestamp
      layouts:
        - '2006-01-02T15:04:05.000Z'
        - '2006-01-02T15:04:05Z'
        - '2006-01-02 15:04:05'
      test:
        - '2023-12-01T10:30:45.123Z'

  # Drop empty events
  - drop_event:
      when:
        equals:
          message: ""

#==================== Elasticsearch template setting ==============
setup.template.settings:
  index.number_of_shards: 1
  index.codec: best_compression
  _source.enabled: true

#==================== Elasticsearch output ========================
output.elasticsearch:
  hosts: ["${ELASTICSEARCH_URL:localhost:9200}"]
  username: "${ELASTICSEARCH_USERNAME:}"
  password: "${ELASTICSEARCH_PASSWORD:}"
  
  # Index naming
  index: "inergize-%{[environment]}-%{+yyyy.MM.dd}"
  
  # Template settings
  template.name: "inergize"
  template.pattern: "inergize-*"
  template.settings:
    index.number_of_replicas: 0
    index.refresh_interval: 30s
  
  # ILM Policy
  ilm.enabled: true
  ilm.rollover_alias: "inergize-logs"
  ilm.pattern: "{now/d}-000001"
  ilm.policy: |
    {
      "policy": {
        "phases": {
          "hot": {
            "actions": {
              "rollover": {
                "max_size": "1GB",
                "max_age": "1d"
              }
            }
          },
          "warm": {
            "min_age": "7d",
            "actions": {
              "allocate": {
                "number_of_replicas": 0
              }
            }
          },
          "cold": {
            "min_age": "30d",
            "actions": {
              "allocate": {
                "number_of_replicas": 0
              }
            }
          },
          "delete": {
            "min_age": "90d"
          }
        }
      }
    }

#==================== Kibana dashboards ===========================
setup.dashboards.enabled: true
setup.kibana:
  host: "${KIBANA_URL:localhost:5601}"

#==================== Logging =====================================
logging.level: info
logging.to_files: true
logging.files:
  path: /var/log/filebeat
  name: filebeat
  keepfiles: 7
  permissions: 0644

#==================== Monitoring ===================================
monitoring.enabled: true
monitoring.elasticsearch:
  hosts: ["${ELASTICSEARCH_URL:localhost:9200}"]
  username: "${ELASTICSEARCH_USERNAME:}"
  password: "${ELASTICSEARCH_PASSWORD:}"

#==================== HTTP endpoint ===============================
http.enabled: true
http.host: "0.0.0.0"
http.port: 5066